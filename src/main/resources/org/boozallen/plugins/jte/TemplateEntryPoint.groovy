/*
   Copyright 2018 Booz Allen Hamilton

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/


import org.boozallen.plugins.jte.binding.*
import org.boozallen.plugins.jte.config.*
import org.boozallen.plugins.jte.hooks.*
import org.boozallen.plugins.jte.console.TemplateLogger
import org.boozallen.plugins.jte.TemplateEntryPointVariable
import org.boozallen.plugins.jte.utils.TemplateScriptEngine
import com.cloudbees.groovy.cps.impl.CpsClosure 

def call(CpsClosure body = null){
    // get template to be executed if missing closure param
    // this is placed at the top to consolidate JTE initialization
    // logging before the logs generated by createWorkspaceStash()
    String template
    if(!body){
        template = TemplateEntryPointVariable.getTemplate(pipelineConfig)
    }

    try{
        Hooks.invoke(Validate, getBinding())
        Hooks.invoke(Init, getBinding())
        
        /*
          exists if JTE invoked via:
          template{
              // do things 
          } <-- the closure parameter is variable "body"
        */
        if (body){ 
            body()
        } else{
            TemplateScriptEngine.parse(template, getBinding()).run() 
        }
    }catch(any){
        currentBuild.result = "FAILURE" 
        throw any 
    }finally{
        Hooks.invoke(CleanUp, getBinding())
        Hooks.invoke(Notify, getBinding())
    }
}